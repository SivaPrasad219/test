# GitHub Actions workflow to run Semgrep for static code analysis.
# Scans code on push and pull requests to the main branch, and weekly on Fridays.
# Requires SEMGREP_APP_TOKEN secret set in GitHub for Semgrep cloud integration.

name: Semgrep

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '31 3 * * 5' # Runs every Friday at 3:31 AM UTC

permissions:
  contents: read # For actions/checkout to fetch code
  security-events: write # For uploading SARIF results to GitHub
  actions: read # For accessing Action run status in private repositories

jobs:
  semgrep:
    name: Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - uses: actions/checkout@v4

      # Set up Python (required for Semgrep)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Cache Semgrep dependencies to speed up scans
      - name: Cache Semgrep rules
        uses: actions/cache@v4
        with:
          path: ~/.cache/semgrep
          key: ${{ runner.os }}-semgrep-${{ hashFiles('.semgrep/**') }}
          restore-keys: |
            ${{ runner.os }}-semgrep-

      # Install Semgrep
      - name: Install Semgrep
        run: pip install semgrep

      # Run Semgrep scan to generate SARIF file
      - name: Run Semgrep Scan
        run: semgrep scan --sarif --output=semgrep.sarif --config=p/ci
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      # Run Semgrep CI to report findings and fail on issues
      - name: Run Semgrep CI
        run: semgrep ci
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      # Upload SARIF file to GitHub for security tab integration
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
        if: always()