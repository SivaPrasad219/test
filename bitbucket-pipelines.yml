definitions:
  services:
    docker:
      memory: 7128
  caches:
    sonar: ~/.sonar
    node: ~/.npm
  steps:
    - step: &sonar-step
        name: SonarQube analysis
        image: gradle:7.6.0-jdk17
        size: 2x
        runs-on:
          - self.hosted
          - linux
        caches:
          - sonar
        on-fail:
          strategy: ignore
        script:
          - chmod +x gradlew
          - rm -rf ~/.sonar/*
          - rm -rf ~/.gradle/*
          - ./gradlew build
          - export SONAR_SCANNER_OPTS="-Xmx2048m"
          - pipe: sonarsource/sonarqube-scan:3.0.2
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL}
              SONAR_TOKEN: ${SONAR_TOKEN}
              EXTRA_ARGS: "-Dsonar.tests=src/test -Dsonar.java.binaries=build/classes -Dsonar.java.test.binaries=build/test-classes"
              DEBUG: "true"
    - step: &quality-gate-step
        name: Check SonarQube Quality Gate
        image: gradle:7.6.0-jdk17
        size: 2x
        runs-on:
          - self.hosted
          - linux
        on-fail:
          strategy: ignore
        script:
          - pipe: sonarsource/sonarqube-quality-gate:1.2.1
            variables:
              SONAR_TOKEN: ${SONAR_TOKEN}
              DEBUG: "true"
    - step: &docker-step
        name: Build and Push DAS_UI
        size: 2x
        caches:
          - docker
        services:
          - docker
        script:
          - export IMAGE_NAME=test:$BITBUCKET_COMMIT
          - docker build -t $IMAGE_NAME .
          - docker tag $IMAGE_NAME test:latest
          - pipe: atlassian/aws-ecr-push-image:1.1.1
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              IMAGE_NAME: test
              TAGS: '${BITBUCKET_COMMIT} latest ${BITBUCKET_TAG}'
              DEBUG: "true"
    - step: &trivy-step
        name: Run Trivy vulnerability scanner
        image: aquasec/trivy:latest
        size: 2x
        runs-on:
          - self.hosted
          - linux
        services:
          - docker
        script:
          # Install AWS CLI
          - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          - unzip awscliv2.zip
          - sudo ./aws/install
          # Login to AWS ECR
          - dockerpass=$(aws ecr get-login-password --region us-east-1)
          - awsEcrBaseImageURI=786422513092.dkr.ecr.us-east-1.amazonaws.com
          - docker login -u AWS -p $dockerpass $awsEcrBaseImageURI
          - export TRIVY_CACHE_DIR=/tmp/trivy
          - mkdir -p $TRIVY_CACHE_DIR
          - docker pull test:$BITBUCKET_COMMIT
          - trivy image --format sarif --output trivy-results.sarif test:$BITBUCKET_COMMIT
        artifacts:
          - trivy-results.sarif
        variables:
          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
          AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION


clone:
  depth: full

pipelines:
  default:
    # - step: *sonar-step
    # - step: *quality-gate-step
    - step: *docker-step
    - step: *trivy-step
